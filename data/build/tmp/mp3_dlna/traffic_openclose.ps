%!PS-Adobe-2.0
%%Title: traffic_openclose.ps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Fri Mar 20 22:54:41 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (traffic_openclose.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (pengliu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 20 22:54:41 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
518 448 M
63 0 V
6366 0 R
-63 0 V
434 448 M
(0) Rshow
1.000 UL
LTb
518 911 M
63 0 V
6366 0 R
-63 0 V
434 911 M
(5) Rshow
1.000 UL
LTb
518 1375 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
(10) Rshow
1.000 UL
LTb
518 1838 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
(15) Rshow
1.000 UL
LTb
518 2302 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
(20) Rshow
1.000 UL
LTb
518 2765 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
(25) Rshow
1.000 UL
LTb
518 3229 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
(30) Rshow
1.000 UL
LTb
518 3692 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
(35) Rshow
1.000 UL
LTb
518 4156 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
(40) Rshow
1.000 UL
LTb
518 4619 M
63 0 V
6366 0 R
-63 0 V
-6450 0 R
(45) Rshow
1.000 UL
LTb
518 448 M
0 63 V
0 4108 R
0 -63 V
518 308 M
(00:00) Cshow
1.000 UL
LTb
786 448 M
0 31 V
0 4140 R
0 -31 V
1054 448 M
0 31 V
0 4140 R
0 -31 V
1322 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
(01:00) Cshow
1.000 UL
LTb
1590 448 M
0 31 V
0 4140 R
0 -31 V
1857 448 M
0 31 V
0 4140 R
0 -31 V
2125 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
(02:00) Cshow
1.000 UL
LTb
2393 448 M
0 31 V
0 4140 R
0 -31 V
2661 448 M
0 31 V
0 4140 R
0 -31 V
2929 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
(03:00) Cshow
1.000 UL
LTb
3197 448 M
0 31 V
0 4140 R
0 -31 V
3465 448 M
0 31 V
0 4140 R
0 -31 V
3733 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
(04:00) Cshow
1.000 UL
LTb
4000 448 M
0 31 V
0 4140 R
0 -31 V
4268 448 M
0 31 V
0 4140 R
0 -31 V
4536 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
(05:00) Cshow
1.000 UL
LTb
4804 448 M
0 31 V
0 4140 R
0 -31 V
5072 448 M
0 31 V
0 4140 R
0 -31 V
5340 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
(06:00) Cshow
1.000 UL
LTb
5608 448 M
0 31 V
0 4140 R
0 -31 V
5876 448 M
0 31 V
0 4140 R
0 -31 V
6143 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
(07:00) Cshow
1.000 UL
LTb
6411 448 M
0 31 V
0 4140 R
0 -31 V
6679 448 M
0 31 V
0 4140 R
0 -31 V
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
(08:00) Cshow
1.000 UL
LTb
1.000 UL
LTb
518 4619 N
518 448 L
6429 0 V
0 4171 V
-6429 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(number of connections) Cshow
grestore
LTb
LCb setrgbcolor
3732 98 M
(time) Cshow
LTb
3732 4829 M
(connections opened and closed over time) Cshow
1.000 UP
612 2394 M
(Number Opens) Rshow
612 1746 M
(Number Closes) Rshow
612 1653 M
(Total Open) Rshow
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
720 1838 M
518 2951 L
921 1004 M
720 1838 L
403 -741 R
921 1004 L
412 556 R
1123 1097 L
412 -93 R
-202 556 V
403 -370 R
1535 1004 L
403 93 R
-202 93 V
403 278 R
1938 1097 L
403 0 R
-202 371 V
2543 911 M
-202 186 V
403 0 R
2543 911 L
402 835 R
2744 1097 L
403 1390 R
2945 1746 L
3357 911 M
3147 2487 L
3559 1375 M
3357 911 L
404 186 R
-202 278 V
403 93 R
3761 1097 L
4164 911 M
-202 557 V
403 -464 R
4164 911 L
403 93 R
-202 0 V
4768 819 M
-201 185 V
407 278 R
4768 819 L
409 92 R
-203 371 V
404 -185 R
5177 911 L
404 557 R
5378 1097 L
404 463 R
-201 -92 V
403 1390 R
5782 1560 L
414 0 R
5984 2858 L
6422 448 M
6196 1560 L
428 -278 R
6422 448 L
% End plot #1
% Begin plot #2
stroke
LT1
/Helvetica findfont 140 scalefont setfont
518 1468 Pnt
720 1746 Pnt
921 1560 Pnt
1123 1746 Pnt
1333 2024 Pnt
1535 1931 Pnt
1736 2024 Pnt
1938 2209 Pnt
2139 2302 Pnt
2341 2487 Pnt
2543 2209 Pnt
2744 2394 Pnt
2945 2858 Pnt
3147 4248 Pnt
3357 2394 Pnt
3559 2580 Pnt
3761 2580 Pnt
3962 2673 Pnt
4164 2394 Pnt
4365 2487 Pnt
4567 2394 Pnt
4768 2302 Pnt
4974 2487 Pnt
5177 2394 Pnt
5378 2487 Pnt
5581 3043 Pnt
5782 2673 Pnt
5984 4248 Pnt
6196 3970 Pnt
6422 3692 Pnt
6624 3599 Pnt
% End plot #2
% Begin plot #3
1.000 UL
LT2
/Helvetica findfont 140 scalefont setfont
518 2951 Pnt
720 1838 Pnt
921 1004 Pnt
1123 1097 Pnt
1333 1560 Pnt
1535 1004 Pnt
1736 1190 Pnt
1938 1097 Pnt
2139 1468 Pnt
2341 1097 Pnt
2543 911 Pnt
2744 1097 Pnt
2945 1746 Pnt
3147 2487 Pnt
3357 911 Pnt
3559 1375 Pnt
3761 1097 Pnt
3962 1468 Pnt
4164 911 Pnt
4365 1004 Pnt
4567 1004 Pnt
4768 819 Pnt
4974 1282 Pnt
5177 911 Pnt
5378 1097 Pnt
5581 1468 Pnt
5782 1560 Pnt
5984 2858 Pnt
6196 1560 Pnt
6422 448 Pnt
6624 1282 Pnt
% End plot #3
% Begin plot #4
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
720 1560 M
518 1931 L
921 1190 M
720 1560 L
1123 911 M
921 1190 L
412 92 R
1123 911 L
412 186 R
-202 185 V
403 -185 R
-201 0 V
1938 911 M
-202 186 V
403 278 R
1938 911 L
403 0 R
-202 464 V
404 -185 R
2341 911 L
403 0 R
-201 279 V
402 92 R
2744 911 L
403 186 R
-202 185 V
412 1483 R
3147 1097 L
412 93 R
3357 2765 L
3761 1097 M
-202 93 V
403 185 R
3761 1097 L
403 93 R
-202 185 V
4365 911 M
-201 279 V
403 -93 R
4365 911 L
403 0 R
-201 186 V
407 0 R
4768 911 L
409 93 R
-203 93 V
404 -93 R
-201 0 V
404 -93 R
-203 93 V
404 927 R
5581 911 L
403 371 R
-202 649 V
414 -93 R
5984 1282 L
6422 726 M
6196 1838 L
428 -463 R
6422 726 L
% End plot #4
% Begin plot #5
stroke
LT4
/Helvetica findfont 140 scalefont setfont
720 1746 M
518 1468 L
403 92 R
720 1746 L
403 0 R
921 1560 L
412 464 R
1123 1746 L
412 185 R
-202 93 V
403 0 R
-201 -93 V
403 278 R
1736 2024 L
403 278 R
-201 -93 V
403 278 R
2139 2302 L
404 -93 R
-202 278 V
403 -93 R
2543 2209 L
402 649 R
2744 2394 L
403 1854 R
2945 2858 L
412 -464 R
3147 4248 L
3559 2580 M
3357 2394 L
404 186 R
-202 0 V
403 93 R
-201 -93 V
403 -186 R
-202 279 V
403 -186 R
-201 -93 V
403 0 R
-202 93 V
403 -185 R
-201 92 V
407 93 R
4768 2302 L
409 92 R
-203 93 V
404 0 R
-201 -93 V
404 649 R
5378 2487 L
404 186 R
-201 370 V
403 1205 R
5782 2673 L
414 1297 R
-212 278 V
438 -556 R
-226 278 V
428 -371 R
-202 93 V
% End plot #5
% Begin plot #6
stroke
LT5
/Helvetica findfont 140 scalefont setfont
518 1931 Pnt
720 1560 Pnt
921 1190 Pnt
1123 911 Pnt
1333 1282 Pnt
1535 1097 Pnt
1736 1097 Pnt
1938 911 Pnt
2139 1375 Pnt
2341 911 Pnt
2543 1190 Pnt
2744 911 Pnt
2945 1282 Pnt
3147 1097 Pnt
3357 2765 Pnt
3559 1190 Pnt
3761 1097 Pnt
3962 1375 Pnt
4164 1190 Pnt
4365 911 Pnt
4567 1097 Pnt
4768 911 Pnt
4974 1097 Pnt
5177 1004 Pnt
5378 1004 Pnt
5581 911 Pnt
5782 1931 Pnt
5984 1282 Pnt
6196 1838 Pnt
6422 726 Pnt
6624 1375 Pnt
% End plot #6
1.000 UL
LTb
518 4619 N
518 448 L
6429 0 V
0 4171 V
-6429 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
